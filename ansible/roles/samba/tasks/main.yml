---
- name: Install Samba packages
  apt:
    pkg:
      - samba
      - avahi-daemon
    state: present
    update_cache: yes

- name: Copy service file for SMB
  copy: 
    src: smb.service
    dest: "/etc/avahi/services/smb.service"

- name: Create Samba shares root directory
  file:
    state: directory
    path: "{{ samba_shares_root }}"
    owner: "{{ system_user }}"
    group: "{{ system_group }}"
    mode: '0755'
  when: samba_shares|length > 0

- name: Create share directories
  with_items: "{{ samba_shares }}"
  file:
    state: directory
    path: "{{ item.path|default([samba_shares_root,item.name]|join('/')) }}"
    owner: "{{ system_user }}"
    group: "{{ system_group }}"
    mode: "{{ item.directory_mode|default('0775') }}"
    setype: "{{ item.setype|default('samba_share_t') }}"

- name: Samba configuration
  template:
    dest: "{{ samba_configuration }}"
    src: smb.conf.j2
    validate: 'testparm -s %s'
  notify:
    - Restart Samba services

- name: Create username map file if needed
  template:
    dest: "{{ samba_username_map_file }}"
    src: smbusers.j2
  notify:
    - Restart Samba services
  when: samba_username_map is defined

- name: Adding users
  user:
    createhome: no
    name: "{{ item.name }}"
    system: yes
    shell: /usr/sbin/nologin
    groups: "{{ system_group }}"
    state: present
  with_items: "{{ samba_users }}"
  no_log: true

- name: Create Samba users if they don't exist yet
  shell: >
    set -o nounset -o pipefail -o errexit &&
    (pdbedit --user={{ item.name }} 2>&1 > /dev/null) \
    || (echo {{ item.password }}; echo {{ item.password }}) \
    | smbpasswd -s -a {{ item.name }}
  args:
    executable: /bin/bash
  with_items: "{{ samba_users }}"
  no_log: true
  register: create_user_output
  changed_when: "'Added user' in create_user_output.stdout"