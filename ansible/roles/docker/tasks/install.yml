---
- name: Remove old docker versions
  apt:
    pkg:
      - docker 
      - docker-engine 
      - docker.io
      - containerd
      - runc
    state: absent
   
- name: Install docker-ce dependencies
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: present
    update_cache: yes
    cache_valid_time: "{{ system_apt_cache_valid_time }}"
 
- name: Add docker key - Debian
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present
  when: ansible_lsb.id == 'Debian'
     
- name: Construct docker repository entry for apt configuration - Debian
  command: bash -c "echo \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" "
  register: docker_repo_line
  when: ansible_lsb.id == 'Debian'

- debug: 
    msg: "{{ docker_repo_line.stdout }}"
  when: ansible_lsb.id == 'Debian'

- name: Add docker repository - Debian
  apt_repository:
    repo: "{{ docker_repo_line.stdout }}"
    state: present
  when: ansible_lsb.id == 'Debian'

- name: Add docker key - Ubuntu
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when: ansible_lsb.id == 'Ubuntu'

- name: Construct docker repository entry for apt configuration - Ubuntu
  command: bash -c "echo \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" "
  register: docker_repo_line
  when: ansible_lsb.id == 'Ubuntu'
 
- debug: 
    msg: "{{ docker_repo_line.stdout }}"
  when: ansible_lsb.id == 'Ubuntu'
 
- name: Add docker repository - Ubuntu
  apt_repository:
    repo: "{{ docker_repo_line.stdout }}"
    state: present
  when: ansible_lsb.id == 'Ubuntu'
      
- name: Install docker-ce + Python packages for Docker
  apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - python3-docker
    state: present
    update_cache: yes
    cache_valid_time: "{{ system_apt_cache_valid_time }}"