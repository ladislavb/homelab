---
- name: Create Lidarr container
  docker_container:
    docker_host: unix://var/run/docker.sock
    detach: yes
    name: "{{ docker_lidarr_name }}"
    image: "{{ docker_lidarr_image }}"
    pull: yes
    recreate: yes
    container_default_behavior: "no_defaults"
    memory: "{{ docker_lidarr_memory }}"
    log_driver: fluentd
    log_options:
      tag: "log.local.docker.{{ docker_lidarr_name }}"
      fluentd-async: "true"
    network_mode: bridge
    networks:
      - name: "{{ docker_network }}"
    networks_cli_compatible: yes
    env:
        TZ: "{{ homelab_timezone }}"
        UMASK_SET: "022"
        PUID: "{{ docker_uid }}"
        PGID: "{{ docker_gid }}"
    labels:
      traefik.enable: "true"
      traefik.http.routers.lidarr.entrypoints: "websecure"
      traefik.http.routers.lidarr.rule: "Host(`{{ docker_lidarr_proxy_hostname }}`)"
      traefik.http.routers.lidarr.tls: "true"
      traefik.http.routers.lidarr.tls.certresolver: "le"
    volumes:
      - "{{ docker_lidarr_mount_config }}:/config"
      - "{{ docker_download_mount_media }}:/data"
    restart_policy: unless-stopped
    state: present

- name: Start Lidarr
  docker_container:
    name: "{{ docker_lidarr_name }}"
    container_default_behavior: "no_defaults"
    state: started